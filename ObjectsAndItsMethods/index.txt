//OBJECTS

//Objects are used to represent real life datas

// Object is an unordered collection of related data in form of key and value pairs


What is this?
In JavaScript, the this keyword refers to an object.

Which object depends on how this is being invoked (used or called).

The this keyword refers to different objects depending on how it is used:

In an object method, this refers to the object.
Alone, this refers to the global object.
In a function, this refers to the global object.
In a function, in strict mode, this is undefined.
In an event, this refers to the element that received the event.
Methods like call(), apply(), and bind() can refer this to any object.
Note
this is not a variable. It is a keyword. You cannot change the value of this


Accessing Object Methods
You access an object method with the following syntax:

objectName.methodName()
You will typically describe fullName() as a method of the person object, and fullName as a property.

The fullName property will execute (as a function) when it is invoked with ().

This example accesses the fullName() method of a person object:

Example
name = person.fullName();
If you access the fullName property, without (), it will return the function definition:

Example
name = person.fullName;


//OBJECT-METHODS CONSIT OF THE FOLLOWING:

   // 1. Object-Keys()
   // 2. Object-Value()
   // 3. Object-Entries()
   // 4. Object-Freeze()
   // 5. Object-Seal()

OBJECT KEYS () => The Object.keys() method returns an Array Iterator object with the keys of an object.
The Object.keys() method does not change the original object

OBJECT VALUE () => // Object-Value => this method creates and returns an array containing the "value" of an "Object".

OBJECT-ENTRIES () => //Object-Entries => this method creates a nested array of a key and values pairs of an object.

OBJECTS-FREZEEZE () => //Object-Freeze () =>  This method prevents modification of existing properties and also prevent addition of amother property or removal of a property.

//Object-Seal () => this method prevents new properties from being added or removed.